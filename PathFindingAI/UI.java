/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yapayzekahw1;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import models.Pixel;

/**
 *
 * @author civankorkmaz
 */
public class UI extends javax.swing.JFrame {

    BufferedImage img;
    Image newImage;

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();

        File directory = new File("");
//        jTextField1.setText(directory.getAbsolutePath());
        jTextField1.setText("/Users/civankorkmaz/Desktop/horsehead_med_res.jpg");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 1200));

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jLabel1.setMinimumSize(new java.awt.Dimension(1000, 1000));
        jLabel1.setPreferredSize(new java.awt.Dimension(1000, 1000));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jButton2)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            jTextField1.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            img = ImageIO.read(new File(jTextField1.getText()));
//            newImage = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT);
            ImageIcon icon = new ImageIcon(img);

            jLabel1.setIcon(icon);
            BestFirstSearchWithArray(new Pixel(0,0), new Pixel(200, 200));

            
//         JOptionPane.showMessageDialog(null, jLabel1);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        Graphics g = img.getGraphics();

        int x = evt.getX();
        int y = evt.getY();
//        int[] rgb = {255, 100, 50};

        Color myWhite = new Color(0, 255, 255); // Color white
        int rgb = myWhite.getRGB();
        for (int i = 0; i < 200; i++) {
            for (int j = 0; j < 200; j++) {
                img.setRGB(x + i, y + j, rgb);
            }
        }
        System.out.println(x);
        System.out.println(y);
//
//        int xLoc = (x * 10) - 5;
//        int yLoc = (y * 10) - 5;
//        g.setColor(Color.PINK);
//
//
//        g.dispose();
        jLabel1.repaint();

//
//        newImage = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT);
        ImageIcon icon = new ImageIcon(img);
        jLabel1.setIcon(icon);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void drawPoint(int x, int y) {
        Color myWhite = new Color(0, 255, 255); // Color white
        int rgb = myWhite.getRGB();
        img.setRGB(x, y, rgb);
        jLabel1.repaint();
        ImageIcon icon = new ImageIcon(img);
        jLabel1.setIcon(icon);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void BestFirstSearchWithArray(Pixel start, Pixel end) {
        ArrayList<Pixel> visitedPixels = new ArrayList<>();
        ArrayList<Pixel> priorQue = new ArrayList<>();
        priorQue.add(start);

        while (!priorQue.isEmpty()) {
            sortArr(priorQue);
            Pixel temp = priorQue.get(0);


            if (temp.getX() == end.getX() && temp.getY() == end.getY()) {
                return;
            }
            priorQue.remove(0);
            drawPoint(temp.getX(), temp.getY());
//            
//            for(Pixel p : priorQue)
//                System.out.println("Closness="+ p.getCloseness());

            for (int i = -1; i <= 1; i++) {
                for (int j = -1; j <= 1; j++) {
                    if (i == 0 && j == 0) {
                        continue;
                    }
                    int temp_x = temp.getX() + i;
                    int temp_y = temp.getY() + j;
                    //size gore kontrol eklenmeli !!!
                    if(temp_x < 0 || temp_y < 0)
                        continue;
                    
                    if (!isVisited(visitedPixels, temp_x, temp_y)) {
                        System.out.println("temp_x="+temp_x);
                        System.out.println("temp_y="+temp_y);
                        Color color = new Color(img.getRGB(temp_x, temp_y));
                        Pixel tempPixel = new Pixel(temp_x, temp_y, color.getRed(), end);
                        visitedPixels.add(tempPixel);
                        priorQue.add(tempPixel);
                    }
                }
            }
        }

    }

    private boolean isVisited(ArrayList<Pixel> visitedPixels, int x, int y) {
        for (Pixel pixel : visitedPixels) {
            if (pixel.getX() == x && pixel.getY() == y) {
                return true;
            }
        }
        return false;
    }
    
    private void sortArr(ArrayList<Pixel> visitedPixels){
        int n = visitedPixels.size();
          for (int i = 0; i < n-1; i++) 
            for (int j = 0; j < n-i-1; j++) 
                if (visitedPixels.get(j).getCloseness() > visitedPixels.get(j+1).getCloseness()) 
                { 
                    // swap arr[j+1] and arr[i] 
                Collections.swap(visitedPixels, j, j+1);
        
                } 
    }
        

 
}
